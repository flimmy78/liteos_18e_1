#
# isp ko Makefile
#

ifeq ($(PARAM_FILE), )
	PARAM_FILE:=../../../../Makefile.param
	include $(PARAM_FILE)
endif

ifeq ($(MPP_BUILD), y)
EXT_PATH := $(SDK_PATH)/$(EXTDRV)
else
EXT_PATH := $(SDK_PATH)/drv/extdrv/$(OSTYPE)
endif

ISP_KO := ../../lib
EXTRA_CFLAGS += $(MPP_CFLAGS)
EXTRA_CFLAGS += -I$(REL_INC) -I$(SDK_PATH)/mpp/code/mkp/include
EXTRA_CFLAGS += -I$(REL_INC) -I$(SDK_PATH)/mpp/code/arch/$(HIARCH)/include
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp/code/mkp_inc
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp/component/isp/firmware/vreg
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp/component/isp/firmware/vreg/arch/$(HIARCH)
EXTRA_CFLAGS += -I$(SDK_PATH)/mpp/component/isp/include
EXTRA_CFLAGS += -I$(EXT_PATH)/i2c
EXTRA_CFLAGS += -I$(EXT_PATH)/hi_i2c
EXTRA_CFLAGS += -I$(EXT_PATH)/ssp-sony
EXTRA_CFLAGS += -I$(SDK_PATH)/osal/include
EXTRA_CFLAGS += -I$(OSAL_ROOT)/include

ifeq ($(CONFIG_GPIO_I2C), y)
    INC += -I$(EXT_PATH)/gpio-i2c-ex
    INC += -I$(EXT_PATH)/gpio-i2c
else
    INC += -I$(EXT_PATH)/i2c
    INC += -I$(EXT_PATH)/hi_i2c
endif

EXTRA_CFLAGS += $(INC)
ifeq ($(HIGDB),HI_GDB)
EXTRA_CFLAGS += -g
endif
ifeq ($(CONFIG_JPEGEDCF), y)
     EXTRA_CFLAGS += -D ENABLE_JPEGEDCF 
endif
ifeq ($(CONFIG_GPIO_I2C),y)
HI_GPIO_I2C:=HI_GPIO_I2C
else
HI_GPIO_I2C:=HI_GPIO_XXX
endif

EXTRA_CFLAGS += -D$(HI_FPGA) -D$(HI_GPIO_I2C) -D$(HIDBG)

CFLAGS += $(EXTRA_CFLAGS)

ISP_SRC := isp.c isp_st.c mkp_acm.c isp_acm_lut.c  ../vreg/hi_drv_vreg.c ../vreg/hi_vreg.c ../init/$(OSTYPE)/isp_init.c

OBJS = $(patsubst %.c,%.o,$(ISP_SRC))
LIB = lib$(HIARCH)_isp.a

.PHONY: default clean
default: $(OBJS) $(LIB)
	@echo -e "\e[0;32;1m--Compiling 'isp'...\e[0;36;1m" 
	@echo -e "\e[0m" 
	@mkdir -p $(ISP_KO) && cp -rf *.a $(ISP_KO)
	@mkdir -p $(REL_INC) && cp ../init/$(OSTYPE)/hi_isp_param.h $(REL_INC) -fr

$(OBJS): %.o : %.c
	@$(CC) $(CFLAGS) -c $< -o $@

$(LIB): $(OBJS)
	@$(AR) $(ARFLAGS) $@ $(OBJS)

clean:
	@$(RM) $(OBJS) $(LIB)
	@if [ -e $(ISP_KO) ];then rm -rf "$(ISP_KO)"; fi
	@rm $(REL_INC)/hi_isp_param.h -f

